import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    defaultConfig {
//        applicationId "com.advance.demo"
//        applicationId "com.opos.mobaddemo" //oppo测试包名，oppo广告需要指定包名才可以
//        applicationId "com.example.pptv" // 验证测试tanx\honor广告
        applicationId "com.vivo.adnet.demo.app" // vivo SDK验证，必须是这个包名

        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        multiDexEnabled true    // true时，生成多个dex
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }

    signingConfigs {
        debug {
            storeFile file('advanceDev.jks')
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }

        release {
            storeFile file('advanceDev.jks')
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }


    buildTypes {
        debug {

            buildConfigField "String", "BUILD_DATA", getBuildTime()

            minifyEnabled false
            signingConfig signingConfigs.debug

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "BUILD_DATA", getBuildTime()

            minifyEnabled true
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        checkReleaseBuilds false

        abortOnError false
    }

//    buildFeatures {
//        viewBinding true
//    }

    aaptOptions {
        cruncherEnabled = false
//        additionalParameters = [ 'android:attr/lStar']

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


private static String getBuildTime() {
//    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("EEEE MM-dd HH:mm")
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM-dd HH:mm")
//    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yy-MM月dd日-HH时mm分")
    LocalDateTime now = LocalDateTime.now()
    String dateTime = dtf.format(now)
    return "\"${dateTime}\""
}

//dependencies {
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    }
//    androidTestImplementation 'com.android.support.test:rules:1.0.2'
//}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {


//引入Advance SDK --------start--------

//----------------引入方式1：在线依赖，适合直接使用得开发者，具体的SDK版本请参考advanceXXX库的gradle配置中引入得SDK版本号
//1.1  必须引入部分： 首先引入聚合库，排除不需要的adapter库，此部分引入不包含广告aar文件，aar需单独引入。
//    implementation('com.github.bayescom:Android_AdvanceSDK:xxx') {
////        穿山甲有两个版本的SDK。对应了两个adapter，注意只能使用一个，通过下方exclude方法移除掉不需要的版本
////        exclude module : 'advancecsj'
//        exclude module: 'advancecsjoppo'
//    }
//    // 必须，Mercury SDK aar
//    implementation "io.github.bayescom:mercury-sdk:XXX"
//
////1.2  可选引入部分，引入各个广告ADN得aar
//    //依次引入各家广告SDK：穿山甲、百度、快手、等等广告SDK
//    implementation fileTree(dir: 'libs', include: ["open_ad_sdk_xxx.aar","Baidu_MobAds_SDK_xxx.aar","kssdk-ad-xxx.aar","等其他广告SDK"])
//----------------引入方式1 end ----------------------------------------------------------------


//----------------引入方式2：依赖代码工程（adn工程中包含了adapter及广告aar），适合可能有一些代码改动需求的用户
//2.1 必须引入部分
    implementation project(path: ':advancelib') //聚合核心
    implementation project(path: ':advancemry') //倍业Mercury

//2.2 可选引入部分
//   注意：穿山甲有两个版本的SDK。对应了两个adapter，注意只能使用一个
    implementation project(path: ':advancecsj') // 穿山甲线上正式版
//   implementation project(path: ':advancecsjoppo') // 穿山甲oppo渠道改包名特殊版

    implementation project(path: ':advancegdt') // 优量汇
    implementation project(path: ':advancebd') // 百度
    implementation project(path: ':advancesigmob') //sigmob
    implementation project(path: ':advanceks') //快手
    implementation project(path: ':advancetanx') //阿里tanx-sdk
    implementation project(path: ':advanceoppo') //  oppo 纯净版sdk
    implementation project(path: ':advancetap') // TapTap广告SDK
    implementation project(path: ':advancehuawei') // 华为广告SDK
    implementation project(path: ':advancexiaomi') // 小米广告SDK
    implementation project(path: ':advancevivo') // vivo广告SDK
    implementation project(path: ':advancehonor') // 荣耀广告SDK
//----------------引入方式2 end ----------------------------------------------------------------


//----------------3.额外引入项. 部分广告SDK必须依赖项引入，请确保添加，另注意查看APP自身是否有相关重复引入，避免产生冲突
    //---快手--- 必须依赖的引入库
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'

    // ---oppo--- 必须依赖的引入库
    implementation 'androidx.palette:palette:1.0.0'//490版本新增

    //---tanx-SDK---  必须依赖的引入库
    //tanx广告SDK需要用到得公共库，如果版本不一致请一定要检查，确认广告执行正常
    implementation 'com.alibaba:fastjson:1.1.72.android'
    //使用高版本得glide 必须要进行自定义图片加载器，否则tanx会执行异常
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.3")

    //---taptap广告SDK--- 必须依赖的引入库
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
//    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    //建议使用此版本glide
//    implementation "com.github.bumptech.glide:glide:4.9.0"
//    implementation "com.android.support:appcompat-v7:28.0.0"
    implementation 'androidx.annotation:annotation:1.7.0'
    implementation 'androidx.annotation:annotation-jvm:1.9.1'

//    implementation "com.android.support:support-v4:28.0.0"
//    implementation 'com.android.support:recyclerview-v7:28.0.0'

    //小米SDK必要依赖
    implementation 'com.google.code.gson:gson:2.8.5'

    //引入Advance SDK --------end--------


//
//        以下部分为公共引用部分
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.6'

    implementation 'androidx.multidex:multidex:2.0.0'

    implementation(name: 'circleimageview-2.2.0', ext: 'aar')
    implementation 'com.github.pedrovgs:lynx:1.1.0' //显示logcat插件

    // 强制使用1.5.0版本，避免使用1.7.0（导致编译报错：android:attr/lStar not found）
    implementation('androidx.core:core:1.5.0') {
        force = true
    }
//    implementation("com.poly-gamma:pg-ogm-core:[0.4.5, 2.0.0[")

}
